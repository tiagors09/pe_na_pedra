@startuml pe_na_pedra_class_diagram_4
package types {
  class JsonMap {
    <<typedef>>
    Map<String, dynamic>
  }
}

package controllers {
  class AuthFormController {
    + formData: JsonMap
    - late _userId: String?
    - _token: String?
    - _expiryDate: DateTime?
    - _logoutTimer: Timer?

    - _authenticate(formData: JsonMap, urlSegment: String): Future<void>
    - _autoLogout(): void
    + isAuth(): bool
    + userId(): String?
    + token(): String?
    + emailValidator(value: String?): String
    + passwordValidator(value: String?): String
    + emailOnSaved(value: String?, formData: JsonMap): void
    + passwordOnSaved(value: String?, formData: JsonMap): void
    + signup(context: BuildContext, formData: JsonMap): Future<void>
    + signIn(context: BuildContext, formData: JsonMap): Future<void>
    + tryAutoLogin(): Future<void>
    + logout(): void
  }

  class TrailFormController {
    + formData: JsonMap
    + nameValidator(value: String?): String
    + difficultyValidator(value: String?): String
    + locationValidator(value: String?): String
    + nameOnSaved(value: String?, formData: JsonMap): void
    + difficultyOnSaved(value: String?, formData: JsonMap): void
    + locationOnSaved(value: String?, formData: JsonMap): void
    + onSubmit(context: BuildContext, formData: JsonMap): void
  }

  class HikerEditFormController {
    + formData: JsonMap
    + fullNameValidator(value: String?): String
    + addressValidator(value: String?): String
    + birthdayValidator(value: String?): String
    + imageUrlValidator(value: String?): String
    + fullNameOnSaved(value: String?, formData: JsonMap): void
    + addressOnSaved(value: String?, formData: JsonMap): void
    + birthdayOnSaved(value: String?, formData: JsonMap): void
    + imageUrlOnSaved(value: String?, formData: JsonMap): void
    + onSubmit(context: BuildContext, formData: JsonMap): void
  }
}

TrailFormController --> JsonMap : use
HikerEditFormController --> JsonMap : use
AuthFormController --> JsonMap : use
@enduml
